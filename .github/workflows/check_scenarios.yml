name: Scenario Validation

on:
  workflow_call:
    inputs:
      release:
        description: "release tag of OpenLineage to use"
        type: string
      get-latest-snapshots:
        description: "Should the artifact be downloaded from maven repo or circleci"
        type: string
      fail-for-failures:
        description: "should the job fail if there are failures in tests"
        type: boolean

jobs:
  run-scenario-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: get scenarios' OL versions
        id: get_versions
        run: |
          SCENARIO_DIR=./consumer/scenarios
          if [ ! -d "$SCENARIO_DIR" ]; then
              echo "Scenario directory '$SCENARIO_DIR' not found!"
              exit 1
          fi

          VERSIONS=()
          for scenario in "$SCENARIO_DIR"/*; do
              if [ -d "$scenario" ] && [ -f "$scenario/config.json" ]; then
                  VERSION=$(jq -r '.openlineage_version' "$scenario/config.json" 2>/dev/null)
                  if [ -n "$VERSION" ] && [ "$VERSION" != "null" ]; then
                      VERSIONS+=("$VERSION")
                  fi
              fi
          done

          UNIQUE_VERSIONS=($(printf "%s\n" "${VERSIONS[@]}" | sort -u))
          echo "versions=$(IFS=,; echo "${UNIQUE_VERSIONS[*]}")" >> $GITHUB_OUTPUT

      - name: Create report.json directory
        run: mkdir -p reports/

      - name: Validation
        uses: ./.github/actions/run_event_validation
        with:
          component: 'scenarios'
          release_tags: ${{ steps.get_versions.outputs.versions }}
          target-path: 'reports/scenarios-report.json'
          event-directory: './consumer/scenarios'
          producer-dir: './consumer'

      - uses: actions/upload-artifact@v4
        with:
          name: scenarios-report
          path: reports/scenarios-report.json
          retention-days: 1

      - name: fail for failures in report
        id: fail-for-failures
        if: ${{ inputs.fail-for-failures }}
        run: |
          jq -e '.scenarios.status == "SUCCESS"' downloads/scenario-report.json > /dev/null || exit 1

