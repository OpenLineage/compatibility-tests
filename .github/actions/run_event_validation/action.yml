name: Run syntax validation for OL events
description: "Runs syntax validation for OL events using spec from given release of OL"
author: Tomasz Nazarewicz
inputs:
  tag:
    description: "Version of the spec to check against"
    default: ""
    required: false
  release_tags:
    description: "Versions of the spec to check against"
    required: false
  ol_release:
    description: "release to run the validation with"
    default: ""
    required: false
  component_release:
    description: "release of the component producing events"
    default: ""
    required: false
  target-path:
    description: "Path to save the report to"
    required: true
  event-directory:
    description: "Directory containing the events to validate"
    required: true
  producer-dir:
    description: "directory with producer definitions"
    required: true
    default: './producer'
  component:
    description: "Component name to use"
    required: true


outputs:
  report_path:
    value: ${{ inputs.target-path }}
    description: "File path of the downloaded openlineage-java jar"

runs:
  using: "composite"
  steps:
    - name: create necessary dirs
      id: create_dirs
      shell: bash
      run: |
        mkdir -p specs
        mkdir -p tmp
        mkdir -p report

    - name: get OpenlineageCode
      uses: actions/checkout@v4
      with:
        repository: OpenLineage/OpenLineage
        path: tmp

    - name: Get spec for each tag
      shell: bash
      run: |
        cd tmp
        IFS=',' read -ra TAGS <<< "${{ inputs.release_tags }}"
        for TAG in "${TAGS[@]}"; do
        echo "Checking out tag: $TAG"
            git fetch --tags --quiet
            if git checkout --quiet "$TAG"; then
                DEST_DIR="../specs/$TAG"
                if [ -d "spec" ]; then
                    mkdir -p "../specs/$TAG"
                    find spec -path './website' -prune -o -type f \( -name '*Facet.json' -o -name 'OpenLineage.json' \) -exec cp {} "../specs/$TAG/" \;
                    echo "success"
                else
                    echo "Spec directory not found in $TAG"
                fi
            else
                echo "Tag $TAG not found!"
            fi
        done
        cd ..

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Validate OpenLineage events
      shell: bash
      run: |
        pip install -r ./scripts/requirements.txt
        python scripts/validate_ol_events.py \
        --event_base_dir=${{ inputs.event-directory }} \
        --spec_base_dir=specs \
        --target=${{ inputs.target-path }} \
        --component="${{ inputs.component }}" \
        --producer_dir=${{ inputs.producer-dir }} \
        --openlineage_version=${{ inputs.release_tags }} \
        --component_version=${{ inputs.component_release }}