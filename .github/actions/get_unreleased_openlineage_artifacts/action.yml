name: Get OpenLineage Artifacts
description: "Download Maven artifacts for openlineage-spark_2.13 and openlineage-java and output file paths"
author: Tomasz Nazarewicz
inputs:
  artifact-directory:
    description: "Directory to download artifacts to"
    required: false
    default: "./"
  version:
    description: "Version of components to use as a fallback to missing CircleCI artifact"
    required: true
  skip-spark:
    description: "Skip spark integration download"
    required: false
    default: 'false'
  skip-flink:
    description: "Skip spark integration download"
    required: false
    default: 'false'
  skip-java:
    description: "Skip java client download"
    required: false
    default: 'false'
  skip-sql:
    description: "Skip sql interface download"
    required: false
    default: 'false'
  skip-extensions:
    description: "Skip extensions download"
    required: false
    default: 'false'
  skip-gcp-lineage:
    description: "Skip gcp-lineage transport download"
    required: false
    default: 'false'
  skip-s3:
    description: "Skip s3 transport download"
    required: false
    default: 'false'
  skip-gcs:
    description: "Skip gcs transport download"
    required: false
    default: 'false'


outputs:
  java:
    value: ${{ steps.consolidate-outputs.outputs.java }}
    description: "File path of the downloaded openlineage-java jar"
  sql:
    value: ${{ steps.consolidate-outputs.outputs.sql }}
    description: "File path of the downloaded openlineage-java jar"
  spark:
    value: ${{ steps.consolidate-outputs.outputs.spark }}
    description: "File path of the downloaded openlineage-spark jar"
  flink:
    value: ${{ steps.consolidate-outputs.outputs.flink }}
    description: "File path of the downloaded openlineage-spark jar"
  extensions:
    value: ${{ steps.consolidate-outputs.outputs.extensions }}
    description: "File path of the downloaded openlineage-spark jar"
  gcp-lineage:
    value: ${{ steps.consolidate-outputs.outputs.gcp-lineage }}
    description: "File path of the downloaded openlineage-spark jar"
  gcs:
    value: ${{ steps.consolidate-outputs.outputs.gcs }}
    description: "File path of the downloaded openlineage-spark jar"
  s3:
    value: ${{ steps.consolidate-outputs.outputs.s3 }}
    description: "File path of the downloaded openlineage-spark jar"

runs:
  using: "composite"
  steps:
    - name: create directory for the artifacts
      id: create-artifact-dir
      shell: bash
      run: mkdir -p ${{ inputs.artifact-directory }}

    - name: Download OpenLineage artifacts
      id: download-ol-artifacts
      shell: bash
      run: |
        python ./scripts/get_latest_unreleased_artifact.py \
        --path=${{ inputs.artifact-directory }}

    - name: set action outputs
      id: set-action-outputs
      shell: bash
      run: |
        check_artifact_downloaded() {
          if [ $2 = 'false']; then
            if [ -f ${{ inputs.artifact-directory }}/$1 ]; then
              echo "$3=$(ls ${{ inputs.artifact-directory }}/$1)" >> $GITHUB_OUTPUT
            else
              echo "skip-$3=false" >> $GITHUB_OUTPUT
            fi
          fi
        }
        
        echo "skip-flink=true" >> $GITHUB_OUTPUT
        echo "skip-spark=true" >> $GITHUB_OUTPUT
        echo "skip-sql=true" >> $GITHUB_OUTPUT
        echo "skip-extensions=true" >> $GITHUB_OUTPUT
        echo "skip-java=true" >> $GITHUB_OUTPUT
        echo "skip-gcp-lineage=true" >> $GITHUB_OUTPUT
        echo "skip-gcs=true" >> $GITHUB_OUTPUT
        echo "skip-s3=true" >> $GITHUB_OUTPUT
        
        check_artifact_downloaded openlineage-flink-*.jar ${{ inputs.skip-flink }} "flink"
        check_artifact_downloaded openlineage-spark_*.jar ${{ inputs.skip-spark }} "spark"
        check_artifact_downloaded openlineage-sql-java*.jar ${{ inputs.skip-sql }} "sql"
        check_artifact_downloaded spark-extension-interfaces-*.jar ${{ inputs.skip-extensions }} "extensions"
        check_artifact_downloaded openlineage-java-*.jar ${{ inputs.skip-java }} "java"
        check_artifact_downloaded transports-dataplex-*.jar ${{ inputs.skip-gcp-lineage }} "gcp-lineage"
        check_artifact_downloaded transports-gcs-*.jar ${{ inputs.skip-gcs }} "gcs"
        check_artifact_downloaded transports-s3-*.jar ${{ inputs.skip-s3 }} "s3"

    - name: download missing jars from release
      id: download-release
      uses: ./.github/actions/get_openlineage_artifacts
      with:
        skip-spark: ${{ steps.set-action-outputs.outputs.skip-spark }}
        skip-flink: ${{ steps.set-action-outputs.outputs.skip-flink }}
        skip-java: ${{ steps.set-action-outputs.outputs.skip-java }}
        skip-sql: ${{ steps.set-action-outputs.outputs.skip-sql }}
        skip-extensions: ${{ steps.set-action-outputs.outputs.skip-extensions }}
        skip-gcp-lineage: ${{ steps.set-action-outputs.outputs.skip-gcp-lineage }}
        skip-s3: ${{ steps.set-action-outputs.outputs.skip-s3 }}
        skip-gcs: ${{ steps.set-action-outputs.outputs.skip-gcs }}

    - name: consolidate outputs
      id: consolidate-outputs
      shell: bash
      run: |
        echo "flink=${{ steps.set-action-outputs.outputs.flink || steps.download-release.outputs.flink }}" >> $GITHUB_OUTPUT
        echo "spark=${{ steps.set-action-outputs.outputs.spark || steps.download-release.outputs.spark }}" >> $GITHUB_OUTPUT
        echo "spark=${{ steps.set-action-outputs.outputs.sql || steps.download-release.outputs.sql }}" >> $GITHUB_OUTPUT
        echo "extensions=${{ steps.set-action-outputs.outputs.extensions || steps.download-release.outputs.extensions }}" >> $GITHUB_OUTPUT
        echo "java=${{ steps.set-action-outputs.outputs.java || steps.download-release.outputs.java }}" >> $GITHUB_OUTPUT
        echo "gcp-lineage=${{ steps.set-action-outputs.outputs.gcp-lineage || steps.download-release.outputs.gcp-lineage }}" >> $GITHUB_OUTPUT
        echo "gcs=${{ steps.set-action-outputs.outputs.gcs || steps.download-release.outputs.gcs }}" >> $GITHUB_OUTPUT
        echo "s3=${{ steps.set-action-outputs.outputs.s3 || steps.download-release.outputs.s3 }}" >> $GITHUB_OUTPUT